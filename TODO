http client server test
 - add existence check insertion for embedded socket list
 - add asan profile
 - add tstan profile
 - add code coverage
 - add memory leak checker to default and debug profiles
 - fix
ERROR,/home/jblatt/src/duderino/everscale/base/src/ESBEpollMultiplexer.cpp,156,140137561823040 [HttpMultiplexer:8] cannot add socket 543 to epoll descriptor 8: 17:File exists
CRITICAL,/home/jblatt/src/duderino/everscale/http/proxy/src/ESHttpStack.cpp,422,140137505912576 [stack] Cannot add client socket to multiplexer: File exists
ERROR,/home/jblatt/src/duderino/everscale/http/proxy/tests/ESHttpEchoClientHandler.cpp,291,140137505912576 [handler] Cannot execute transaction: File exists
 - fix
WARNING,/home/jblatt/src/duderino/everscale/http/http1/src/ESHttpClientSocket.cpp,821,140201625683712 [socket:69] error formatting response header: Invalid state
WARNING,/home/jblatt/src/duderino/everscale/http/proxy/tests/ESHttpEchoClientHandler.cpp,181,140201625683712 [handler] Transaction failed at send request headers state
WARNING,/home/jblatt/src/duderino/everscale/http/proxy/tests/ESHttpEchoServerHandler.cpp,263,140201671849728 [handler] Transaction failed at request header parse state
 - fix EpollMultiplexer::checkIdleSockets race condition
 - flakey http1 parser test
 - bind to ephemeral port in stack unit tests
 - why was std::bad_alloc thrown by http client/server test?  verify -fno-exceptions.  check leaks
 - raise fd limit
 - create proxy test
multiplexer dispatcher
 - helpful or harmful?  better to allow unbalance and just let each multipler add whatever it accepts?
 - dispatch to multiplexer with silo affinity/be-fe connection alignment?
cmakeify
 - ctest memory checks, etc
 - finish todos in config.cmake - a few adhoc test programs
 - memory check
 - doxygen
perf counters
 - log to logger not FILE *
 - revisit efficency of historical perf counter.  turn into a composite with an interval?  rename time series?
 - simple perf counter and averaging counter should track variance - online/incremental variance algo
 - calc percentiles in latency - https://www.codeproject.com/Articles/25656/Calculating-Percentiles-in-Memory-bound-Applicatio
 - unit test for averaging counter - currently looks busted
async dns client
 - start with caching sync impl and async interface.  cache according to the dns record ttl and LRU
 - move to ESB.  add unit test
 - common caching code.  intial async impl can use threadpool and gethostbyname
tcp stuff
 - make sure full duplex
 - track bps
 - move tcp echo client/server into ESB and turn into a unit test over loopback/same proc
http stuff
 - turn top-level client and server into a unit test over loopback (client->server and client->proxy->server)
 - idle timeout
 - max requests per connection option (1 disables keepalives)
 - max header size option
 - max body size option
 - slow loris defense
logging
 - atomic newlines in log statements
 - pretty print thread ids
 - filenames, not full paths
 - rotating file logger - batch into memory buffers and flush occasionally.  double buffer.  fill one while flush other.  if one to be filled is too small, drop messages
bootstrap config
 - reload when file changes or on SIGHUP.  ports, buffer sizes, etc
 - xds agent could just regenerate this, serializing updates and using atomic moves
 - could potentially break into multiple files for scalability, but then need cross-file atomic update mechanism.
 - journalling approach?  base bootstrap file.  log of incremental updates.   compress incremental updates to avoid
   filling disk
fix license - 3 levels of derivation
fix multimap or replace with stl
lockless datastructures - list.  hashmap.
incorporate and prefer atomic.h.
  - https://www.bogotobogo.com/cplusplus/files/CplusplusConcurrencyInAction_PracticalMultithreading.pdf
  - http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2007/n2145.html
  - http://www.cplusplus.com/reference/atomic/atomic_flag_test_and_set/
ipv6 support
start as root, bind to ports, drop privs
use setrlimit to raise fd limits, etc
addr space randomization
no eval logging macros
tls support
xds support
readiness and liveness check support - e2e vs local options
URL 
 - canonicalization / encode and decode per chromium RFC
 - username and pass
load shedding
pin threads / fe-be connection alignment
h2 support
plugin api
elementry waf impl of plugin api
perfect forward secrecy
sni
boringssl
tls staples
ktls sockmap and splice
